@model Admin.Mvc.Services.ConfigApiClient.UpsertDto
@{
    var isEdit = !string.IsNullOrWhiteSpace(Model.Name) && Context.Request.Path.Value!.Contains("Edit");
    ViewData["Title"] = isEdit ? "Edit Config" : "Create Config";
}

<h2 class="mb-3">@ViewData["Title"]</h2>

<div class="card shadow-sm">
    <div class="card-body">
        <form method="post" class="row g-3">

            <div class="col-md-6">
                <label asp-for="ApplicationName" class="form-label">Service (Application)</label>
                <input asp-for="ApplicationName" class="form-control" placeholder="service-a, service-b..." />
                <span class="form-text">Boş bırakmayın. Hangi servise ait olduğuna göre filtrelenir.</span>
            </div>
            <div class="col-md-6">
                <label asp-for="Name" class="form-label">Name</label>

                @if (isEdit)
                {
                    <!-- Edit ekranında ad değişmesin ama POST’a gitsin diye readonly -->
                    <input asp-for="Name" class="form-control" placeholder="ör. FeatureX.Enabled" readonly />
                    <div class="form-text">Mevcut kaydı düzenlerken ad değiştirilemez.</div>
                }
                else
                {
                    <!-- Create ekranı -->
                    <input asp-for="Name" class="form-control" placeholder="ör. FeatureX.Enabled" />
                }
            </div>
            <div class="col-md-4">
                <label asp-for="Type" class="form-label">Type</label>
                <select asp-for="Type" class="form-select">
                    <option value="string">string</option>
                    <option value="int">int</option>
                    <option value="double">double</option>
                    <option value="bool">bool</option>
                </select>
            </div>

            <div class="col-md-8">
                <label asp-for="Value" class="form-label">Value</label>
                <input asp-for="Value" class="form-control" placeholder="Değer" />
            </div>

            <div class="col-12">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive" value="true" @(Model.IsActive ? "checked" : null) />
                    <input type="hidden" name="IsActive" value="false" />
                    <label class="form-check-label" for="IsActive">Aktif</label>
                </div>

            </div>

            <div class="col-12 d-flex justify-content-between mt-2">
                <a class="btn btn-outline-secondary"
                   href="@Url.Action("Index","Configs", new { app = Model.ApplicationName })">
                    ← Cancel
                </a>

                <button type="submit" class="btn btn-primary">
                    @(isEdit ? "Save Changes" : "Create")
                </button>
            </div>

        </form>
    </div>
</div>
